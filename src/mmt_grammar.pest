alpha = { 'a'..'z' | 'A'..'Z' }
digit = { '0'..'9' }

ident = { (alpha | digit)+ }

ident_list = _{ !digit ~ ident ~ (" " ~ ident)+ }

model_library <- (model)+
model <- ('model' / 'function') name '(' arg (',' arg)* ')' '{' statement* '}'
definition <- 'let' name '=' expression 

arg <- independentVar / dependentVar
  dependentVar <- name '(' name (',' name )* ')'
  independentVar <- name '->' domain
  domain <- range / domainName
  range <- '[' real '...' real ']'
  statement <- definition / subModel / rateEquation / equation / return
  return <- 'return' expression
  subModel <- 'use' call
  rateEquation <- 'dot' '(' name ')' '=' expression
  equation <- expression '=' expression
  expression <- sign term (term_op term)*
  term       <- factor (factor_op factor)*
  factor     <-   call / name / real / integer / '(' expression ')'
  sign       <- < [-+]? >
  term_op    <- < [-+] >
  factor_op  <- < [*/^] >
  name      <- < [a-z] [a-zA-Z0-9_]* >
  domainName <- < [A-Z] [a-zA-Z0-9_]* >
  call <- name '(' callArg (',' callArg )* ')'
  callArg <- name '=' expression / expression
  integer    <- < [0-9]+ >
  real       <- < [0-9]+'.'[0-9]+ > / integer
  %whitespace <- [ \t\r\n]*
